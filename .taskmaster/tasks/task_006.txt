# Task ID: 6
# Title: Desenvolvimento do Dashboard Administrativo para Gerenciamento da Fila
# Status: pending
# Dependencies: 2, 3
# Priority: high
# Description: Criar a interface do dashboard administrativo que exibe a lista de participantes na fila, permitindo ao administrador visualizar, editar, excluir e selecionar 3 jogadores para iniciar uma partida.
# Details:
Crie uma área protegida para o admin. Use `shadcn/ui` (Table, Dialog, Button) para exibir os dados dos participantes (foto, nome, cidade, estado). Implemente a busca de dados da API de participantes. Adicione checkboxes para selecionar exatamente 3 jogadores. O botão 'Iniciar Partida' deve ser habilitado apenas quando 3 jogadores estiverem selecionados. Use o Socket.IO para atualizar a lista em tempo real quando novos participantes se cadastrarem.

# Test Strategy:
Verificar se a lista de participantes é carregada e exibida corretamente. Testar as funcionalidades de edição e exclusão. Validar a lógica de seleção, garantindo que apenas 3 jogadores possam ser selecionados. Confirmar que a lista é atualizada em tempo real ao adicionar um novo participante pelo totem.

# Subtasks:
## 1. Implementação da Área Protegida/Admin [pending]
### Dependencies: None
### Description: Criar a área de login/autenticação e garantir que apenas administradores autenticados possam acessar o dashboard.
### Details:
Utilize middleware ou componentes de proteção de rota para restringir o acesso. Implemente tela de login simples, se necessário, e garanta o redirecionamento para o dashboard apenas após autenticação bem-sucedida.

## 2. Construção da Tabela de Participantes com shadcn/ui [pending]
### Dependencies: 6.1
### Description: Desenvolver a tabela interativa utilizando os componentes Table, Dialog e Button do shadcn/ui para exibir os dados dos participantes.
### Details:
Inclua colunas para foto, nome, cidade e estado. Adicione botões para editar e excluir participantes, além de checkboxes para seleção. Garanta responsividade e acessibilidade.

## 3. Integração com a API de Participantes [pending]
### Dependencies: 6.2
### Description: Conectar a tabela à API RESTful para buscar, editar e excluir participantes em tempo real.
### Details:
Implemente chamadas GET, PUT e DELETE para a API de participantes. Atualize a tabela automaticamente após operações de CRUD. Utilize feedback visual para carregamento e erros.

## 4. Implementação da Lógica de Seleção de Jogadores [pending]
### Dependencies: 6.2
### Description: Adicionar checkboxes para seleção de jogadores e garantir que apenas 3 possam ser selecionados simultaneamente.
### Details:
Desabilite checkboxes extras quando 3 jogadores estiverem selecionados. O botão 'Iniciar Partida' deve ser habilitado apenas quando exatamente 3 jogadores forem selecionados.

## 5. Integração com Socket.IO para Atualização em Tempo Real [pending]
### Dependencies: 6.3
### Description: Conectar o dashboard ao Socket.IO para atualizar a lista de participantes automaticamente quando houver novos cadastros.
### Details:
Implemente listeners para eventos de novos participantes e atualize a tabela sem recarregar a página. Garanta sincronização de estado entre múltiplos administradores.

## 6. Testes de Edição, Exclusão e Seleção de Participantes [pending]
### Dependencies: 6.3, 6.4, 6.5
### Description: Testar todas as funcionalidades do dashboard, incluindo edição, exclusão, seleção de jogadores e atualização em tempo real.
### Details:
Valide se a lista é carregada corretamente, se as operações de CRUD funcionam, se a lógica de seleção está correta e se a atualização via Socket.IO ocorre sem falhas.

