{
  "version": "1.0.0",
  "projectName": "Quiz Show Interativo",
  "description": "Sistema de entretenimento digital que simula um programa de TV de perguntas e respostas",
  "tags": {
    "master": {
      "name": "master",
      "description": "Main development context",
      "createdAt": "2025-01-27T00:00:00.000Z",
      "tasks": [
        {
          "id": "1",
          "title": "Configuração do Projeto Next.js",
          "description": "Setup inicial do projeto Next.js 14+ com TypeScript",
          "status": "pending",
          "priority": "high",
          "dependencies": [],
          "details": "Configurar projeto Next.js 14+ com TypeScript, ESLint, Prettier, estrutura de pastas",
          "testStrategy": "Verificar se o projeto inicia corretamente",
          "subtasks": []
        },
        {
          "id": "2",
          "title": "Configuração do Banco de Dados com Prisma",
          "description": "Implementar Prisma ORM com SQLite para desenvolvimento",
          "status": "pending",
          "priority": "high",
          "dependencies": [
            "1"
          ],
          "details": "Configurar Prisma ORM, criar schema.prisma com modelos de dados",
          "testStrategy": "Executar migrações do Prisma e testar conexão",
          "subtasks": []
        },
        {
          "id": "3",
          "title": "Setup do Socket.IO para Comunicação em Tempo Real",
          "description": "Configurar Socket.IO para sincronização em tempo real",
          "status": "pending",
          "priority": "high",
          "dependencies": [
            "1"
          ],
          "details": "Instalar e configurar Socket.IO no Next.js, criar servidor WebSocket",
          "testStrategy": "Testar conexão Socket.IO entre múltiplos clientes",
          "subtasks": []
        },
        {
          "id": "4",
          "title": "Interface do Totem de Cadastro",
          "description": "Criar interface touch-friendly para cadastro de participantes",
          "status": "pending",
          "priority": "high",
          "dependencies": [
            "1",
            "2"
          ],
          "details": "Desenvolver interface responsiva para totem, implementar captura de webcam",
          "testStrategy": "Testar em diferentes dispositivos touch e navegadores",
          "subtasks": []
        },
        {
          "id": "5",
          "title": "Dashboard Administrativo",
          "description": "Criar painel administrativo para gerenciar participantes",
          "status": "pending",
          "priority": "high",
          "dependencies": [
            "1",
            "2"
          ],
          "details": "Desenvolver interface administrativa, implementar CRUD de participantes",
          "testStrategy": "Testar todas as operações CRUD e validações",
          "subtasks": []
        },
        {
          "id": "6",
          "title": "Sistema de Perguntas e Respostas",
          "description": "Implementar estrutura de perguntas hardcoded e lógica de respostas",
          "status": "pending",
          "priority": "high",
          "dependencies": [
            "2"
          ],
          "details": "Criar conjunto de 24 perguntas hardcoded, implementar lógica de seleção",
          "testStrategy": "Verificar se as perguntas são carregadas corretamente",
          "subtasks": []
        },
        {
          "id": "7",
          "title": "Interface de Jogo para 3 Jogadores",
          "description": "Desenvolver interface de jogo sincronizada para 3 jogadores",
          "status": "pending",
          "priority": "high",
          "dependencies": [
            "3",
            "6"
          ],
          "details": "Criar interface responsiva para 3 jogadores, implementar exibição de perguntas",
          "testStrategy": "Testar com 3 clientes simultâneos e verificar sincronização",
          "subtasks": []
        },
        {
          "id": "8",
          "title": "Sistema de Pontuação e Ranking",
          "description": "Implementar lógica de pontuação baseada em velocidade e acerto",
          "status": "pending",
          "priority": "medium",
          "dependencies": [
            "6",
            "7"
          ],
          "details": "Criar algoritmo de pontuação, implementar ranking em tempo real",
          "testStrategy": "Testar diferentes cenários de pontuação",
          "subtasks": []
        },
        {
          "id": "9",
          "title": "Sincronização em Tempo Real",
          "description": "Implementar sincronização completa via Socket.IO",
          "status": "pending",
          "priority": "high",
          "dependencies": [
            "3",
            "7",
            "8"
          ],
          "details": "Implementar eventos Socket.IO para início de partida e respostas",
          "testStrategy": "Testar sincronização com múltiplos clientes",
          "subtasks": []
        },
        {
          "id": "10",
          "title": "Display Público e Modo Idle",
          "description": "Criar interface de exibição pública com modo idle e ranking",
          "status": "pending",
          "priority": "medium",
          "dependencies": [
            "8",
            "9"
          ],
          "details": "Desenvolver display público separado, implementar modo idle",
          "testStrategy": "Testar exibição em diferentes tamanhos de tela",
          "subtasks": []
        },
        {
          "id": "11",
          "title": "Tema Visual e Animações",
          "description": "Implementar tema dark brutalist e animações básicas",
          "status": "pending",
          "priority": "low",
          "dependencies": [
            "4",
            "5",
            "7",
            "10"
          ],
          "details": "Aplicar tema dark brutalist consistente, implementar animações",
          "testStrategy": "Verificar consistência visual e performance",
          "subtasks": []
        },
        {
          "id": "12",
          "title": "Testes e Deploy",
          "description": "Realizar testes finais, otimizações e deploy do sistema",
          "status": "pending",
          "priority": "medium",
          "dependencies": [
            "11"
          ],
          "details": "Executar testes de integração, otimizações finais e deploy",
          "testStrategy": "Testes completos do sistema em ambiente de produção",
          "subtasks": []
        }
      ]
    }
  },
  "currentTag": "master",
  "master": {
    "tasks": [
      {
        "id": 13,
        "title": "Configuração do Ambiente de Analytics e Relatórios",
        "description": "Preparar a infraestrutura para coleta, processamento e visualização de dados analíticos e relatórios administrativos.",
        "details": "Utilizar Next.js 14+ com TypeScript para frontend, API Routes para backend e Prisma ORM para acesso ao banco SQLite. Integrar biblioteca de visualização de dados como Chart.js (v4+) para gráficos interativos. Avaliar uso de ferramentas como NextAuth para autenticação administrativa. Estruturar diretórios para dashboards e relatórios exportáveis. Garantir isolamento de ambiente administrativo.",
        "testStrategy": "Testar endpoints de API para coleta de dados, validar renderização de dashboards e gráficos, simular diferentes volumes de dados para garantir performance.",
        "priority": "high",
        "dependencies": [],
        "status": "pending",
        "subtasks": [
          {
            "id": 1,
            "title": "Estruturação dos Diretórios e Layouts do Ambiente Administrativo",
            "description": "Organizar a estrutura de diretórios do projeto Next.js 14+ para separar claramente o ambiente administrativo, incluindo dashboards e relatórios exportáveis.",
            "dependencies": [],
            "details": "Criar diretórios dedicados em 'app' para dashboards, relatórios e componentes administrativos. Implementar layouts específicos para o ambiente administrativo, garantindo isolamento visual e funcional.",
            "status": "pending",
            "testStrategy": "Verificar navegação entre páginas administrativas, garantir que componentes e rotas estejam isolados do ambiente público."
          },
          {
            "id": 2,
            "title": "Configuração do Backend com API Routes e Prisma ORM",
            "description": "Preparar rotas de API para coleta e processamento de dados analíticos, utilizando Prisma ORM para acesso ao banco SQLite.",
            "dependencies": [
              "13.1"
            ],
            "details": "Implementar endpoints RESTful em API Routes para operações de leitura e escrita de dados analíticos. Configurar modelos Prisma para métricas e relatórios, garantindo integridade e performance nas consultas.",
            "status": "pending",
            "testStrategy": "Testar endpoints com dados simulados, validar respostas e performance das consultas SQL."
          },
          {
            "id": 3,
            "title": "Implementação da Autenticação Administrativa",
            "description": "Integrar NextAuth para autenticação e controle de acesso ao ambiente administrativo.",
            "dependencies": [
              "13.1"
            ],
            "details": "Configurar provedores de autenticação no NextAuth, definir regras de acesso para rotas administrativas e proteger endpoints sensíveis.",
            "status": "pending",
            "testStrategy": "Simular login/logout, testar restrição de acesso a rotas e APIs administrativas."
          },
          {
            "id": 4,
            "title": "Integração da Biblioteca de Visualização de Dados",
            "description": "Adicionar e configurar Chart.js (v4+) para renderização de gráficos interativos nos dashboards.",
            "dependencies": [
              "13.2"
            ],
            "details": "Instalar Chart.js, criar componentes de gráficos reutilizáveis e conectar dados dinâmicos provenientes das API Routes.",
            "status": "pending",
            "testStrategy": "Validar renderização de diferentes tipos de gráficos, testar atualização dinâmica dos dados e responsividade dos componentes."
          },
          {
            "id": 5,
            "title": "Validação do Isolamento e Segurança do Ambiente Administrativo",
            "description": "Garantir que o ambiente administrativo esteja isolado e protegido contra acessos não autorizados.",
            "dependencies": [
              "13.3"
            ],
            "details": "Revisar permissões de acesso, testar cenários de invasão e validar que dados sensíveis não estejam acessíveis fora do ambiente administrativo.",
            "status": "pending",
            "testStrategy": "Executar testes de acesso não autorizado, revisar logs de autenticação e simular tentativas de acesso externo."
          }
        ]
      },
      {
        "id": 14,
        "title": "Implementação de KPIs e Métricas de Negócio",
        "description": "Desenvolver lógica para cálculo e armazenamento dos principais KPIs do sistema, como NPS, taxa de retenção, frequência de uso e tempo médio de sessão.",
        "details": "Adicionar campos e tabelas auxiliares no Prisma para armazenar métricas agregadas. Implementar funções de cálculo em API Routes, utilizando agregações SQL eficientes. Para NPS, criar endpoint para coleta de feedback dos participantes. Automatizar atualização dos KPIs via cron jobs (node-cron) ou triggers no backend.",
        "testStrategy": "Testar cálculos com dados simulados, validar precisão dos KPIs, comparar resultados com cálculos manuais.",
        "priority": "high",
        "dependencies": [
          13
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 15,
        "title": "Dashboard Executivo de Analytics",
        "description": "Criar dashboard administrativo com visão geral executiva: partidas realizadas, participantes únicos, taxa de participação, tempo médio de partida e receita.",
        "details": "Utilizar shadcn/ui para componentes visuais, Chart.js para gráficos e tabelas. Implementar filtros por período (date pickers). Consultar dados via API Routes otimizadas. Garantir responsividade e acessibilidade.",
        "testStrategy": "Testar visualização em diferentes dispositivos, validar atualização dos dados em tempo real, simular diferentes períodos e volumes de dados.",
        "priority": "high",
        "dependencies": [
          14
        ],
        "status": "done",
        "subtasks": [
          {
            "id": 1,
            "title": "Definir estrutura e layout do dashboard",
            "description": "Planejar e implementar o layout executivo do dashboard utilizando componentes visuais do shadcn/ui, incluindo cards para métricas principais e área para gráficos.",
            "dependencies": [],
            "details": "Utilizar shadcn/ui para criar cards e containers que organizem as informações de partidas realizadas, participantes únicos, taxa de participação, tempo médio de partida e receita. Garantir clareza visual e fácil navegação.",
            "status": "done",
            "testStrategy": "Testar a disposição dos componentes em diferentes tamanhos de tela e validar a clareza das informações apresentadas."
          },
          {
            "id": 2,
            "title": "Implementar gráficos e tabelas com Chart.js",
            "description": "Desenvolver gráficos interativos para exibir métricas executivas utilizando Chart.js integrado aos componentes do shadcn/ui.",
            "dependencies": [
              "15.1"
            ],
            "details": "Criar gráficos de barras, linhas e tabelas para visualizar partidas, participantes, taxa de participação, tempo médio e receita. Configurar temas e responsividade conforme padrão do shadcn/ui.",
            "status": "done",
            "testStrategy": "Validar renderização dos gráficos em diferentes dispositivos e temas, além de testar interatividade e atualização dos dados."
          },
          {
            "id": 3,
            "title": "Desenvolver filtros por período (date pickers)",
            "description": "Adicionar filtros de data para permitir seleção de períodos customizados e atualização dinâmica dos dados exibidos.",
            "dependencies": [
              "15.1"
            ],
            "details": "Utilizar componentes de date picker do shadcn/ui para filtrar dados por intervalo de datas. Integrar filtros aos gráficos e tabelas para atualização em tempo real.",
            "status": "done",
            "testStrategy": "Testar seleção de diferentes períodos, validar atualização dos dados e simular cenários com grandes volumes de dados."
          },
          {
            "id": 4,
            "title": "Integrar consulta de dados via API Routes otimizadas",
            "description": "Desenvolver e otimizar rotas de API para buscar dados analíticos conforme filtros aplicados, garantindo performance e segurança.",
            "dependencies": [
              "15.3"
            ],
            "details": "Implementar endpoints que agreguem dados de partidas, participantes, taxas e receita, retornando informações filtradas por período. Garantir cache e otimização das consultas.",
            "status": "done",
            "testStrategy": "Testar respostas das APIs com diferentes filtros, validar tempos de resposta e simular cenários de alta demanda."
          },
          {
            "id": 5,
            "title": "Garantir responsividade e acessibilidade do dashboard",
            "description": "Ajustar o dashboard para funcionar corretamente em dispositivos móveis e desktop, seguindo boas práticas de acessibilidade.",
            "dependencies": [
              "15.2",
              "15.4"
            ],
            "details": "Utilizar recursos do shadcn/ui para responsividade, testar navegação por teclado, contraste de cores e uso de leitores de tela. Validar que todos os elementos são acessíveis e adaptáveis.",
            "status": "done",
            "testStrategy": "Testar visualização em múltiplos dispositivos, validar navegação acessível e simular uso por pessoas com diferentes necessidades."
          }
        ]
      },
      {
        "id": 16,
        "title": "Relatórios Detalhados de Partidas",
        "description": "Desenvolver relatórios detalhados por partida, incluindo participantes, perguntas, respostas, tempos e evolução de pontuação.",
        "details": "Criar endpoints para consulta detalhada de partidas, agregando dados de Game, GameParticipant, Answer e Question. Renderizar relatórios com tabelas e gráficos de linha (Chart.js). Incluir exportação para PDF (pdf-lib) e CSV (papaparse).",
        "testStrategy": "Validar integridade dos dados exibidos, testar exportação de arquivos, comparar relatórios com dados brutos do banco.",
        "priority": "high",
        "dependencies": [
          15
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 17,
        "title": "Análise de Perguntas e Conteúdo",
        "description": "Implementar painel de análise de perguntas: taxa de acerto, tempo médio de resposta, distribuição por categoria/dificuldade e identificação de perguntas problemáticas.",
        "details": "Adicionar queries SQL para agregação de respostas por pergunta. Exibir gráficos de barras e pizza para distribuição. Destacar perguntas com taxa de acerto muito baixa/alta. Permitir filtragem por categoria e dificuldade.",
        "testStrategy": "Testar filtros, validar cálculos de taxa de acerto, simular perguntas problemáticas e verificar destaque visual.",
        "priority": "medium",
        "dependencies": [
          16
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 18,
        "title": "Perfil Analítico de Participantes",
        "description": "Criar página de perfil individual com histórico de partidas, pontuação média/máxima/mínima, taxa de acerto, tempo médio de resposta e evolução de performance.",
        "details": "Implementar endpoints para agregação de dados por participante. Exibir gráficos de linha para evolução temporal. Permitir comparação entre participantes e agrupamentos (idade, localização).",
        "testStrategy": "Testar visualização de diferentes perfis, validar cálculos de agregados, simular comparação entre grupos.",
        "priority": "medium",
        "dependencies": [
          16
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 19,
        "title": "Relatórios Operacionais e Monitoramento do Sistema",
        "description": "Desenvolver painel de monitoramento de uptime, tempo de resposta, erros, uso de recursos e logs de atividades suspeitas.",
        "details": "Integrar biblioteca como next-logger para logs, node-os-utils para métricas de CPU/memória. Exibir gráficos de linha/área para histórico. Implementar alertas para erros críticos via email (nodemailer) ou webhook.",
        "testStrategy": "Simular falhas e picos de uso, validar geração de logs, testar envio de alertas.",
        "priority": "medium",
        "dependencies": [
          13
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 20,
        "title": "Painel de Engajamento e Sazonalidade",
        "description": "Criar painel para análise de horários/dias de maior atividade, sazonalidade de uso e taxa de retenção de participantes.",
        "details": "Agregação de dados por timestamp, exibição de heatmaps e gráficos de barras. Implementar cálculo de retenção (cohort analysis) e exibir tendências.",
        "testStrategy": "Testar visualização de diferentes períodos, validar cálculos de retenção, simular sazonalidade artificialmente.",
        "priority": "medium",
        "dependencies": [
          15
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 21,
        "title": "Exportação de Relatórios em Diversos Formatos",
        "description": "Permitir exportação de relatórios em PDF, Excel/CSV e JSON, além de gráficos interativos.",
        "details": "Utilizar pdf-lib para PDF, papaparse para CSV, e endpoints REST para JSON. Garantir layout consistente e responsivo nos arquivos exportados. Incluir opção de exportação em cada painel.",
        "testStrategy": "Testar exportação com diferentes volumes de dados, validar integridade dos arquivos gerados, abrir arquivos em diferentes softwares.",
        "priority": "medium",
        "dependencies": [
          16,
          17,
          18,
          19,
          20
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 22,
        "title": "Agendamento e Automação de Relatórios",
        "description": "Implementar sistema de agendamento para envio automático de relatórios por email (semanal/mensal) e alertas para métricas críticas.",
        "details": "Utilizar node-cron para agendamento, nodemailer para envio de emails, e triggers para alertas automáticos. Permitir configuração de destinatários e frequência via dashboard.",
        "testStrategy": "Testar envio automático em sandbox, simular condições de alerta, validar logs de envio.",
        "priority": "medium",
        "dependencies": [
          21
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 23,
        "title": "Alertas e Notificações Inteligentes",
        "description": "Desenvolver sistema de alertas automáticos para quedas de participação, anomalias de tempo de resposta, erros críticos e comportamento suspeito.",
        "details": "Implementar lógica de detecção de anomalias (ex: z-score para outliers), triggers para eventos críticos, e integração com sistema de notificações (toast, email, webhook).",
        "testStrategy": "Simular cenários de alerta, validar envio e recebimento de notificações, testar thresholds configuráveis.",
        "priority": "medium",
        "dependencies": [
          22
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 24,
        "title": "Insights e Recomendações Automáticas",
        "description": "Implementar geração automática de insights e sugestões de otimização baseadas em dados coletados.",
        "details": "Utilizar lógica de regras e análise estatística para identificar tendências, padrões anômalos e recomendações de conteúdo. Exibir insights em cards no dashboard.",
        "testStrategy": "Testar geração de insights com dados simulados, validar relevância das recomendações, revisar lógica de detecção.",
        "priority": "medium",
        "dependencies": [
          23
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 25,
        "title": "Painel de Análise de Viés de Resposta",
        "description": "Criar painel para análise de tendências de resposta (viés para A, B ou C) e correlação entre tempo de resposta e acerto.",
        "details": "Agregação de respostas por alternativa, cálculo de correlação (Pearson/Spearman) entre tempo e acerto. Exibir gráficos de dispersão e barras.",
        "testStrategy": "Testar cálculos estatísticos, validar visualização de viés, simular padrões artificiais.",
        "priority": "low",
        "dependencies": [
          17
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 26,
        "title": "Comparativo de Performance entre Participantes",
        "description": "Desenvolver painel para comparação de performance entre participantes e identificação de padrões por grupo/demografia.",
        "details": "Implementar filtros por idade, localização, frequência. Exibir rankings, gráficos comparativos e clusters de comportamento.",
        "testStrategy": "Testar filtros, validar agrupamentos, simular diferentes perfis demográficos.",
        "priority": "low",
        "dependencies": [
          18
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 27,
        "title": "Documentação Técnica e de Usuário dos Relatórios",
        "description": "Produzir documentação clara para uso dos dashboards, exportação de relatórios e interpretação das métricas.",
        "details": "Utilizar Storybook para documentação de componentes, README detalhado para APIs e exemplos de uso. Incluir seção de FAQ e troubleshooting.",
        "testStrategy": "Revisar documentação com usuários reais, validar clareza e cobertura dos tópicos.",
        "priority": "low",
        "dependencies": [
          21,
          22,
          23,
          24,
          25,
          26
        ],
        "status": "pending",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2025-09-26T21:18:33.011Z",
      "updated": "2025-09-27T13:56:57.784Z",
      "description": "Tasks for master context"
    }
  }
}